CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

INCLUDE(CMakeDependentOption)
INCLUDE(CheckIncludeFiles)
INCLUDE(CheckFunctionExists)
INCLUDE(CheckSymbolExists)

PROJECT(YAAVG)

IF (${YAAVG_BINARY_DIR} STREQUAL ${YAAVG_SOURCE_DIR})
	MESSAGE(FATAL_ERROR "In-tree-compile is not prefered.")
ENDIF (${YAAVG_BINARY_DIR} STREQUAL ${YAAVG_SOURCE_DIR})

OPTION(ENABLE_SCREENSHOT "Enable screenshot" ON)



# Options
SET(VIDEO_ENGINE "OpenGL" CACHE STRING
	"Video engine, can be OpenGL or SDL")
SET(VIDEO_DRIVER "SDL" CACHE STRING
	"Video driver, can be GLX or SDL for OpenGL")

# Match driver and engine
IF (${VIDEO_ENGINE} STREQUAL "OpenGL")
	IF (${VIDEO_DRIVER} STREQUAL "SDL")
		SET(video_setting	"EOpenGLGLDSDL")
	ENDIF (${VIDEO_DRIVER} STREQUAL "SDL")
	IF (${VIDEO_DRIVER} STREQUAL "GLX")
		SET(video_setting	"EOpenGLDGLX")
	ENDIF (${VIDEO_DRIVER} STREQUAL "GLX")
ENDIF (${VIDEO_ENGINE} STREQUAL "OpenGL")
IF (${VIDEO_ENGINE} STREQUAL "SDL")
	SET(video_setting	"ESDLDSDL")
ENDIF (${VIDEO_ENGINE} STREQUAL "SDL")

IF (video_setting MATCHES "^video_setting$")
	MESSAGE(FATAL_ERROR "Video engine and driver setting (${VIDEO_ENGINE}/${VIDEO_DRIVER}) is not supported")
ENDIF(video_setting MATCHES "^video_setting$")

# find SDL for utils
MESSAGE(STATUS "Look for SDL")
FIND_PACKAGE(SDL "1.2.12")
# Check for SDL options
IF (video_setting MATCHES "SDL")

	IF (NOT SDL_FOUND)
		MESSAGE(FATAL_ERROR "SDL not found")
	ENDIF (NOT SDL_FOUND)

	MESSAGE(STATUS "SDL found")
	MESSAGE(STATUS "${SDL_LIBRARY}")
	MESSAGE(STATUS "${SDL_INCLUDE_DIR}")
ENDIF (video_setting MATCHES "SDL")


IF (video_setting MATCHES "OpenGL")
	MESSAGE(STATUS "Look for OpenGL")
	FIND_PACKAGE(OpenGL)

	IF ((NOT OPENGL_FOUND) OR (NOT OPENGL_GLU_FOUND))
		MESSAGE(FATAL_ERROR "OpenGL not found")
	ENDIF ((NOT OPENGL_FOUND) OR (NOT OPENGL_GLU_FOUND))

	MESSAGE(STATUS "OpenGL found")
	MESSAGE(STATUS "${OPENGL_LIBRARIES}")
	MESSAGE(STATUS "${OPENGL_INCLUDE_DIR}")

ENDIF (video_setting MATCHES "OpenGL")





# System check
CHECK_INCLUDE_FILES(malloc.h HAVE_MALLOC_H)
CHECK_INCLUDE_FILES(alloca.h HAVE_ALLOCA_H)
CHECK_FUNCTION_EXISTS(atexit HAVE_ATEXIT)
CHECK_FUNCTION_EXISTS(sigaction HAVE_SIGACTION)
CHECK_INCLUDE_FILES(execinfo.h HAVE_EXECINFO_H)
CHECK_FUNCTION_EXISTS(backtrace HAVE_BACKTRACE)
CHECK_FUNCTION_EXISTS(mallinfo HAVE_MALLINFO)
CHECK_FUNCTION_EXISTS(malloc_stats HAVE_MALLOC_STATS)

CHECK_INCLUDE_FILES(stdbool.h HAVE_STDBOOL_H)
CHECK_INCLUDE_FILES(setjmp.h HAVE_SETJMP_H)
CHECK_SYMBOL_EXISTS(sigsetjmp setjmp.h HAVE_SIGSETJMP)
SET(CMAKE_REQUIRED_LIBRARIES	"-lrt")
# ???
LIST(APPEND LINK_LIBRARIES "-lrt")
CHECK_FUNCTION_EXISTS(clock_gettime HAVE_CLOCK_GETTIME)

IF (SDL_FOUND)
	SET(HAVE_SDL 1 CACHE INTERNAL "Have SDL support")
ENDIF(SDL_FOUND)
CONFIGURE_FILE(config.h.cmake.in config.h)

ADD_SUBDIRECTORY(src)



# vim:tabstop=4:shiftwidth=4

